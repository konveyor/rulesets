rulesPath: ../212-jakarta-cdi-to-quarkus.windup.yaml
providers:
- name: java
  dataPath: ./data/212-jakarta-cdi-to-quarkus
- name: builtin
  dataPath: ./data/212-jakarta-cdi-to-quarkus
tests:
- ruleID: jakarta-cdi-to-quarkus-00000
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 1
      messageMatches: Dependency `jakarta.enterprise:jakarta.enterprise.cdi-api`
- ruleID: jakarta-cdi-to-quarkus-00020
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 1
      messageMatches: Dependency `jakarta.inject:jakarta.inject-api`
- ruleID: jakarta-cdi-to-quarkus-00030
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 1
      messageMatches: The `beans.xml` descriptor content is ignored and it could be
        removed from the application
- ruleID: jakarta-cdi-to-quarkus-00040
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 1
      messageMatches: In Quarkus you can skip the @Produces annotation completely
        if the producer method is annotated with a scope annotation,
- ruleID: jakarta-cdi-to-quarkus-00050
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 1
      messageMatches: he Stateless EJBs can be converted to a cdi bean by replacing
        the `@Stateless` annotation with a scope eg `@ApplicationScoped`
