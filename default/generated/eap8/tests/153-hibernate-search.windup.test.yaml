rulesPath: ../153-hibernate-search.windup.yaml
providers:
- name: java
  dataPath: ./data/153-hibernate-search
- name: builtin
  dataPath: ./data/153-hibernate-search
tests:
- ruleID: hibernate-search-00010
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 4
      messageMatches: In Hibernate Search 6, constants are provided through classes
        whose name ends with Settings. Follow link for more details.
- ruleID: hibernate-search-00020
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 1
      messageMatches: This property is not available anymore. To override the default
        analyzer, define a custom analyzer named default. See link.
- ruleID: hibernate-search-00030
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 1
      messageMatches: 'This property is not available anymore. Substitute with the
        Hibernate Search 6 equivalent: `hibernate.search.enabled`.'
- ruleID: hibernate-search-00040
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 1
      messageMatches: No direct equivalent in Hibernate Search 6. This property was
        not documented in Hibernate Search 5. For the specific use case of batch processe.*
- ruleID: hibernate-search-00050
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 1
      messageMatches: AWS configuration properties must change from `hibernate.search.default.elasticsearch.aws.*`
        to `hibernate.search.backend.aws.*`.*
- ruleID: hibernate-search-00060
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 1
      messageMatches: 'This property is not available anymore. Substitute with the
        Hibernate Search 6 equivalent: `hibernate.search.backend.connection_timeout`.'
- ruleID: hibernate-search-00070
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 1
      messageMatches: 'This property is not available anymore. Substitute with the
        Hibernate Search 6 equivalent: `hibernate.search.default.elasticsearch.discovery.default_scheme`.'
- ruleID: hibernate-search-00080
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 1
      messageMatches: 'This property is not available anymore. Substitute with the
        Hibernate Search 6 equivalent: `hibernate.search.backend.discovery.enabled`.'
- ruleID: hibernate-search-00090
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 1
      messageMatches: 'This property is not available anymore. Substitute with the
        Hibernate Search 6 equivalent: `hibernate.search.backend.discovery.refresh_interval`.'
- ruleID: hibernate-search-00100
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 2
      messageMatches: 'This property is not available anymore. Substitute with the
        Hibernate Search 6 equivalent: `hibernate.search.backend.dynamic_mapping`
        (for global defaults.*'
- ruleID: hibernate-search-00105
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 1
      messageMatches: 'This property is not available anymore. Substitute with the
        Hibernate Search 6 equivalent: `hibernate.search.backend.uris`.'
- ruleID: hibernate-search-00110
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 2
      messageMatches: 'This property is not available anymore. Substitute with the
        Hibernate Search 6 equivalent: `hibernate.search.backend.schema_management.minimal_required_status_wait_timeout`
        (for global defaults.*'
- ruleID: hibernate-search-00120
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 2
      messageMatches: 'This property is not available anymore. Substitute with the
        Hibernate Search 6 equivalent: `hibernate.search.schema_management.strategy.*'
  - name: tc-2
    hasIncidents:
      atLeast: 2
      messageMatches: 'This property is not available anymore. Substitute with the
        Hibernate Search 6 equivalent: `hibernate.search.schema_management.strategy.*'
- ruleID: hibernate-search-00140
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 1
      messageMatches: 'This property is not available anymore. Substitute with the
        Hibernate Search 6 equivalent: `hibernate.search.backend.max_connections_per_route`.'
- ruleID: hibernate-search-00150
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 1
      messageMatches: 'This property is not available anymore. Substitute with the
        Hibernate Search 6 equivalent: `hibernate.search.backend.max_connections`.'
- ruleID: hibernate-search-00160
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 1
      messageMatches: 'This property is not available anymore. Substitute with the
        Hibernate Search 6 equivalent: `hibernate.search.backend.password`.'
  - name: tc-2
    hasIncidents:
      atLeast: 1
      messageMatches: 'This property is not available anymore. Substitute with the
        Hibernate Search 6 equivalent: `hibernate.search.backend.password`.'
- ruleID: hibernate-search-00180
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 1
      messageMatches: 'This property is not available anymore. Substitute with the
        Hibernate Search 6 equivalent: `hibernate.search.backend.read_timeout`.'
- ruleID: hibernate-search-00200
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 1
      messageMatches: 'This property is not available anymore. Substitute with the
        Hibernate Search 6 equivalent: `hibernate.search.backend.request_timeout`.'
- ruleID: hibernate-search-00210
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 2
      messageMatches: 'This property is not available anymore. Substitute with the
        Hibernate Search 6 equivalent: `hibernate.search.backend.schema_management.minimal_required_status`
        (for global defaults.*'
- ruleID: hibernate-search-00220
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 1
      messageMatches: 'This property is not available anymore. Substitute with the
        Hibernate Search 6 equivalent: `hibernate.search.backend.username`.'
- ruleID: hibernate-search-00230
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 1
      messageMatches: This property is not available anymore. There is no substitute
        in Hibernate Search 6.
- ruleID: hibernate-search-00240
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 1
      messageMatches: 'This property is not available anymore. Substitute with the
        Hibernate Search 6 equivalent: `hibernate.search.backend.directory.type` (for
        global defaults.*'
- ruleID: hibernate-search-00250
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 2
      messageMatches: 'This property is not available anymore. Substitute with the
        Hibernate Search 6 equivalent: `hibernate.search.backend.directory.root` (for
        global defaults.*'
- ruleID: hibernate-search-00260
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 1
      messageMatches: No equivalent in Hibernate Search 6. The name of an index can
        still be customized in the mapping, usin.*
- ruleID: hibernate-search-00270
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 2
      messageMatches: 'This property is not available anymore. Substitute with the
        Hibernate Search 6 equivalent: `hibernate.search.backend.io.commit_interval`
        (for global defaults.*'
- ruleID: hibernate-search-00280
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 1
      messageMatches: No equivalent in Hibernate Search 6. This property was not documented
        in Hibernate Search 5.
- ruleID: hibernate-search-00290
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 2
      messageMatches: 'This property is not available anymore. Substitute with the
        Hibernate Search 6 equivalent: `hibernate.search.backend.type` (for global
        defaults.*'
- ruleID: hibernate-search-00300
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 2
      messageMatches: 'This property is not available anymore. Substitute with the
        Hibernate Search 6 equivalent: `hibernate.search.backend.io.writer` or `hibernate.search.backend.io.merge`
        (for global defaults.*'
- ruleID: hibernate-search-00310
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 2
      messageMatches: 'This property is not available anymore. Substitute with the
        Hibernate Search 6 equivalent: `hibernate.search.backend.directory.locking.strategy`
        (for global defaults.*'
- ruleID: hibernate-search-00320
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 2
      messageMatches: 'This property is not available anymore. Substitute with the
        Hibernate Search 6 equivalent: `hibernate.search.backend.indexing.queue_size`
        (for global defaults.*'
- ruleID: hibernate-search-00330
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 1
      messageMatches: No equivalent in Hibernate Search 6. In most cases, you wonâ€™t
        need to use indexNullAs anymore. Where indexNullAs is still needed, define
        the token explicitly for each index field. See links for more info.
- ruleID: hibernate-search-00340
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 1
      messageMatches: No direct equivalent in Hibernate Search 6. To enable async
        reader refresh, set hibernate.search.backend.io.refresh_interval or hibernate.search.backend.indexes.<index-name>.io.refresh_interva.*
- ruleID: hibernate-search-00350
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 1
      messageMatches: This property is not available anymore. The filesystem-slave
        directory provider is no longer supported. See links for more information.
- ruleID: hibernate-search-00360
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 1
      messageMatches: This property is not available anymore. Sharding is configured
        differently. See links for more information.
- ruleID: hibernate-search-00370
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 1
      messageMatches: This property is not available anymore. The similarity is configured
        through the analysis configurer. See links for more information.
- ruleID: hibernate-search-00380
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 1
      messageMatches: This property is not available anymore. The JMS/JGroups backends
        are no longer supported. See links for more information.
  - name: tc-2
    hasIncidents:
      atLeast: 1
      messageMatches: This property is not available anymore. The JMS/JGroups backends
        are no longer supported. See links for more information.
  - name: tc-3
    hasIncidents:
      atLeast: 1
      messageMatches: This property is not available anymore. The JMS/JGroups backends
        are no longer supported. See links for more information.
- ruleID: hibernate-search-00390
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 1
      messageMatches: This property is not available anymore. Setting hibernate.search.automatic_indexing.synchronization.strategy
        to async or sync will produce results similar to setting hibernate.search.<index-name>.worker.execution
        to the same value. See links for more information.
- ruleID: hibernate-search-00420
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 1
      messageMatches: 'This property is not available anymore. Substitute with the
        Hibernate Search 6 equivalent: `hibernate.search.backend.log.json_pretty_printing`.'
- ruleID: hibernate-search-00430
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 1
      messageMatches: 'This property is not available anymore: scrolling is forward-only.
        See links for more information.'
- ruleID: hibernate-search-00440
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 1
      messageMatches: This property is not available anymore. When using Hibernate
        Search APIs, the "chunk size" is an argument to the scroll method. When using
        the Hibernate ORM or JPA adapters, the "chunk size" is set to the same value
        as the fetch size. See links for more information.
- ruleID: hibernate-search-00450
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 1
      messageMatches: 'This property is not available anymore. Substitute with the
        Hibernate Search 6 equivalent: `hibernate.search.backend.scroll_timeout`.'
- ruleID: hibernate-search-00460
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 1
      messageMatches: 'This property is not available anymore. Substitute with the
        Hibernate Search 6 equivalent: `hibernate.search.automatic_indexing.enable_dirty_check`.'
- ruleID: hibernate-search-00470
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 1
      messageMatches: 'This property is not available anymore. Substitute with the
        Hibernate Search 6 equivalent: `hibernate.search.background_failure_handler`.
        A different interface should be implemented: see links for more information.'
- ruleID: hibernate-search-00480
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 1
      messageMatches: This property is not available anymore. There's no equivalent
        for Hibernate Search 6. If you need caching for some of your Lucene queries,
        consider upgrading directly to Hibernate Search 6.1, which provides configurable
        Low-level hit caching. See link for more information.
  - name: tc-2
    hasIncidents:
      atLeast: 1
      messageMatches: This property is not available anymore. There's no equivalent
        for Hibernate Search 6. If you need caching for some of your Lucene queries,
        consider upgrading directly to Hibernate Search 6.1, which provides configurable
        Low-level hit caching. See link for more information.
- ruleID: hibernate-search-00500
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 1
      messageMatches: This property is not available anymore. There's no equivalent
        for Hibernate Search 6. No equivalent in Hibernate Search 6. See links for
        more information.
- ruleID: hibernate-search-00510
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 1
      messageMatches: Index uninverting was deprecated in Hibernate Search 5 due to
        poor performance and is no longer allowed. All index fields that you want
        to sort on must be marked as sortable. See links for more information.
- ruleID: hibernate-search-00520
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 1
      messageMatches: 'This property is not available anymore. Substitute with the
        Hibernate Search 6 equivalent: `hibernate.search.automatic_indexing.strategy`.
        Set to `none` to get the equivalent of `hibernate.search.indexing_strategy
        = manual` in Hibernate Search 5.'
- ruleID: hibernate-search-00530
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 1
      messageMatches: This property is not available anymore. See links for more information.
  - name: tc-2
    hasIncidents:
      atLeast: 1
      messageMatches: This property is not available anymore. See links for more information.
- ruleID: hibernate-search-00550
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 1
      messageMatches: 'This property is not available anymore. Substitute with the
        Hibernate Search 6 equivalent: `hibernate.search.backend.analysis.configurer`.
        A different interface should be implemented: see links for more information.'
- ruleID: hibernate-search-00560
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 1
      messageMatches: 'This property is not available anymore. Substitute with the
        Hibernate Search 6 equivalent: `hibernate.search.backend.lucene_version`.'
- ruleID: hibernate-search-00570
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 1
      messageMatches: 'This property is not available anymore. Substitute with the
        Hibernate Search 6 equivalent: `hibernate.search.mapping.configurer`. A different
        interface should be implemented: see links for more information.'
- ruleID: hibernate-search-00580
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 1
      messageMatches: 'This property is no available anymore. No equivalent in Hibernate
        Search 6: entities are always loaded with a query.'
- ruleID: hibernate-search-00590
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 1
      messageMatches: 'This property is not available anymore. Substitute with the
        Hibernate Search 6 equivalent: `hibernate.search.query.loading.cache_lookup.strategy`.'
- ruleID: hibernate-search-00600
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 1
      messageMatches: 'This property is not available anymore. There is no direct
        equivalent in Hibernate Search 6: the similarity is configured through the
        analysis configurer. The default similarity changed when this property is
        not configured: see links for more information.'
- ruleID: hibernate-search-00610
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 1
      messageMatches: This property is not available anymore. No equivalent to the
        concept of "worker" in Hibernate Search 6.*
- ruleID: hibernate-search-00620
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 1
      messageMatches: In Hibernate Search 5, it was possible to apply an @Analyzer
        annotation to a class or property, so that the corresponding analyzer would
        be used by default for any index field declared in this scope.
- ruleID: hibernate-search-00630
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 1
      messageMatches: Annotation-based analyzer definitions are no longer supported.
  - name: tc-2
    hasIncidents:
      atLeast: 1
      messageMatches: Annotation-based analyzer definitions are no longer supported.*
  - name: tc-3
    hasIncidents:
      atLeast: 1
      messageMatches: Annotation-based analyzer definitions are no longer supported.*
- ruleID: hibernate-search-00640
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 1
      messageMatches: '`@AnalyzerDiscriminator` has no direct equivalent in Hibernate
        Search 6: the analyzer assigned to each field is static and cannot change
        at runtime, because that results in unreliable matches and in scoring issues.'
- ruleID: hibernate-search-00650
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 1
      messageMatches: Index-time boosting was deprecated in Hibernate Search 5. It
        is no longer available in Hibernate Search 6.
  - name: tc-2
    hasIncidents:
      atLeast: 1
      messageMatches: Index-time boosting was deprecated in Hibernate Search 5. It
        is no longer available in Hibernate Search 6.*
- ruleID: hibernate-search-00660
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 1
      messageMatches: This annotation was deprecated and non-functional in Hibernate
        Search 5. It is no longer available in Hibernate Search 6.
- ruleID: hibernate-search-00670
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 1
      messageMatches: '`@CalendarBridge` is not necessary to index Calendar values:
        you can simply apply @GenericField to a property of type Calendar, and an
        appropriate default bridge will be used.'
- ruleID: hibernate-search-00680
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 1
      messageMatches: Annotation-based analyzer definitions are no longer supported.
        See link for more information.
- ruleID: hibernate-search-00690
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 1
      messageMatches: The bridge API was completely reworked in Hibernate Search 6.
        See link for more information.
  - name: tc-2
    hasIncidents:
      atLeast: 1
      messageMatches: The bridge API was completely reworked in Hibernate Search 6.
        See link for more information.
- ruleID: hibernate-search-00700
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 1
      messageMatches: '@ContainedIn is no longer necessary in Hibernate Search 6.*'
- ruleID: hibernate-search-00710
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 1
      messageMatches: '@DateBridge is not necessary to index Date values: you can
        simply apply @GenericField to a property of type java.util.Date, java.sql.Date,
        java.sql.Time or java.sql.Timestamp, and an appropriate default bridge will
        be used.'
- ruleID: hibernate-search-00720
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 1
      messageMatches: '`@DocumentId` is still available in Hibernate Search 6, but
        moved to a different package: `org.hibernate.search.mapper.pojo.mapping.definition.annotation.DocumentId`.*'
- ruleID: hibernate-search-00740
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 1
      messageMatches: Facets are now called aggregations, which are a generalization
        of the concept of faceting. See link for more information.
- ruleID: hibernate-search-00750
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 1
      messageMatches: The @Field annotation was split into multiple annotations, specific
        to each field type. See link for more information.
- ruleID: hibernate-search-00770
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 1
      messageMatches: Full-text filters have no direct equivalent in Hibernate Search
        6. See link for more information.
- ruleID: hibernate-search-00780
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 1
      messageMatches: '`@Indexed` is still available in Hibernate Search 6, but moved
        to a different package: `org.hibernate.search.mapper.pojo.mapping.definition.annotation.Indexed`.*'
- ruleID: hibernate-search-00790
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 1
      messageMatches: '`@IndexedEmbedded` is still available in Hibernate Search 6,
        but moved to a different package: `org.hibernate.search.mapper.pojo.mapping.definition.annotation.IndexedEmbedded`.*'
- ruleID: hibernate-search-00800
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 1
      messageMatches: '`@Key` has no equivalent in Hibernate Search 6.'
- ruleID: hibernate-search-00810
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 1
      messageMatches: '`@Latitude` is still available in Hibernate Search 6, but moved
        to a different package: `org.hibernate.search.annotations.Latitude`.'
- ruleID: hibernate-search-00820
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 1
      messageMatches: '`@Longitude` is still available in Hibernate Search 6, but
        moved to a different package: `org.hibernate.search.annotations.Longitude`.'
- ruleID: hibernate-search-00830
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 1
      messageMatches: In Hibernate Search 5, `@Normalizer` could point directly to
        a class extending `org.apache.lucene.analysis.Analyzer`, for example with
        `@Normalizer(impl = MyNormalizer.class)`.*
- ruleID: hibernate-search-00850
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 1
      messageMatches: '@NumericField no longer exists in Hibernate Search 6.*'
- ruleID: hibernate-search-00860
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 1
      messageMatches: '`@ProvidedId` was deprecated in Hibernate Search 5. It no longer
        exists in Hibernate Search 6.*'
- ruleID: hibernate-search-00870
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 1
      messageMatches: '@SortableField(s) no longer exists in Hibernate Search 6. Instead,
        .*'
- ruleID: hibernate-search-00880
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 1
      messageMatches: '@Spatial has no direct equivalent in Hibernate Search 6.*'
- ruleID: hibernate-search-00890
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 1
      messageMatches: '@TikaBridge has no equivalent in Hibernate Search 6 yet.'
- ruleID: hibernate-search-00910
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 4
      messageMatches: The equivalent to Hibernate Search 5â€™s `FullTextEntityManager/FullTextSession`
        is Hibernate Search 6â€™s `SearchSession`. Check link for guid.*
- ruleID: hibernate-search-00920
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 3
      messageMatches: Search APIs have changed significantly in order to implement
        several improvements. The recommended way to build searc.*
- ruleID: hibernate-search-00930
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 1
      messageMatches: Lucene queries are replaced with Lucene-independent "search
        predicates" in Hibernate Search 6. See link for guide and examples.
- ruleID: hibernate-search-00940
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 4
      messageMatches: Lucene sort fields are replaced with Lucene-independent "search
        sorts" in Hibernate Search 6. Follow the link for more info and examples.
- ruleID: hibernate-search-00950
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 4
      messageMatches: The `ProjectionConstants` are no longer available, and Hibernate
        Search 6's DSL must be used instead to build `SearchProjection` objects. Follow
        link for more information and examples.
- ruleID: hibernate-search-00960
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 6
      messageMatches: Facets are now called aggregations, which are a generalization
        of the concept of faceting. See link for more information and examples.
- ruleID: hibernate-search-00970
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 2
      messageMatches: The ErrorHandler interface and API have been replaced with the
        `FailureHandler` interface, and the related configuration properties changed.
        See link for more information and examples.
- ruleID: hibernate-search-00980
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 1
      messageMatches: The @Factory annotation does not exist in Hibernate Search 6
        anymore. It is encouraged instead to rely on a proper dependency injection
        framework if such a feature is needed.*
- ruleID: hibernate-search-00990
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 2
      messageMatches: '`org.hibernate.search.exception.SearchException` has been moved
        to `org.hibernate.search.util.common.SearchException`.'
- ruleID: hibernate-search-01000
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 6
      messageMatches: Static sharding is still available in Hibernate Search 6, but
        it works differently, so the Hibernate Search 5 APIs are no longer available.*
- ruleID: hibernate-search-01010
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 2
      messageMatches: The equivalent to Hibernate Search 5â€™s SearchFactory is Hibernate
        Search 6â€™s SearchMapping, but some operations are more conveniently accessible
        directly from SearchSession.*
- ruleID: hibernate-search-01020
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 2
      messageMatches: 'The MassIndexer mostly stays the same in Hibernate Search 6,
        but it moved to a different package: `org.hibernate.search.mapper.orm.massindexing.MassIndexer`.*'
- ruleID: hibernate-search-01030
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 1
      messageMatches: 'The mass indexing Batch (JSR-352) job mostly stays the same
        in Hibernate Search 6, but `MassIndexingJob` moved to a different package:
        `org.hibernate.search.batch.jsr352.core.massindexing.MassIndexingJob`.*'
- ruleID: hibernate-search-01040
  testCases:
  - name: tc-1
    hasIncidents:
      atLeast: 4
      messageMatches: Hibernate Search 6 uses the groupId `org.hibernate.search` and
        all dependencies must be updated
