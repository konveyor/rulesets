- category: optional
  customVariables: []
  description: Socket communication
  effort: 5
  labels:
  - konveyor.io/source=java
  - konveyor.io/source=java-ee
  - konveyor.io/target=cloud-readiness
  - socket
  links: []
  message: |-
    Java sockets are internal endpoints of two-way communications. They are defined by an IP address, port, and protocol (TCP/UDP).

     Socket communication is not suitable for a cloud environment because it requires fixed communication with a target host.

     Recommendation: Use Java EE standard or loosely coupled protocols such as JMS, JAX-RS, or JAX-WS for backing service interactions.
  ruleID: socket-communication-00000
  when:
    or:
    - java.referenced:
        location: IMPORT
        pattern: java.net.(Socket|MulticastSocket|DatagramSocket|InetSocketAddress)*
    - java.referenced:
        location: IMPORT
        pattern: java.net.ServerSocket*
    - java.referenced:
        location: IMPORT
        pattern: java.nio.channels.AsynchronousServerSocketChannel*
    - java.referenced:
        location: IMPORT
        pattern: java.nio.channels.ServerSocketChannel*
- category: optional
  customVariables:
  - name: niochannelclass
    nameOfCaptureGroup: niochannelclass
    pattern: java.nio.channels.(?P<niochannelclass>(NetworkChannel|MulticastChannel|DatagramChannel|AsynchronousSocketChannel|SocketChannel))?.*
  description: Java NIO channel
  effort: 5
  labels:
  - konveyor.io/source=java
  - konveyor.io/source=java-ee
  - konveyor.io/target=cloud-readiness
  - socket
  links: []
  message: |-
    Java NIO channels provide bulk data transfer to and from NIO buffers. They can be synchronously and asynchronously read and written.

     Channels are not suitable for a cloud environment because they are not a reliable or scalable way to interact with other systems.

     Recommendation: Use Java EE standard or loosely coupled protocols such as JMS, JAX-RS, or JAX-WS for backing service interactions.
  ruleID: socket-communication-00001
  when:
    java.referenced:
      location: IMPORT
      pattern: java.nio.channels.(NetworkChannel|MulticastChannel|DatagramChannel|AsynchronousSocketChannel|SocketChannel)*
