- category: mandatory
  customVariables: []
  description: HTTP session replication (distributable web.xml)
  effort: 3
  labels:
  - konveyor.io/source=java
  - konveyor.io/source=java-ee
  - konveyor.io/target=cloud-readiness
  - clustering
  links:
  - title: 'JBoss EAP: Clustering in Web Applications'
    url: https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.3/html/development_guide/clustering_in_web_applications
  - title: 'Twelve-Factor App: Processes'
    url: https://12factor.net/processes
  - title: 'Getting Started with JBoss EAP for OpenShift Container Platform: Clustering'
    url: https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.3/html-single/getting_started_with_jboss_eap_for_openshift_container_platform/index#reference_clustering
  - title: 'Twelve-Factor App: Backing services'
    url: https://12factor.net/backing-services
  - title: Running Data Grid on OpenShift
    url: https://access.redhat.com/documentation/en-us/red_hat_data_grid/8.0/html-single/running_data_grid_on_openshift/index
  - title: 'JBoss EAP:  Externalize HTTP Sessions to Red Hat Data Grid'
    url: https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.3/html-single/configuration_guide/index#jdg_externalize_http_sessions
  message: |-
    Session replication ensures that client sessions are not disrupted by node failure. Each node in the cluster shares information about ongoing sessions and can take over sessions if another node disappears. In a cloud environment, however, data in the memory of a running container can be wiped out by a restart.

     Recommendations

     * Review the session replication usage and ensure that it is configured properly.
     * Disable HTTP session clustering and accept its implications.
     * Re-architect the application so that sessions are stored in a cache backing service or a remote data grid.

     A remote data grid has the following benefits:

     * The application is more scaleable and elastic.
     * The application can survive EAP node failures because a JVM failure does not cause session data loss.
     * Session data can be shared by multiple applications.
  ruleID: session-00000
  when:
    builtin.xml:
      namespaces:
        w: http://java.sun.com/xml/ns/javaee
      xpath: /w:web-app/w:distributable
- category: optional
  customVariables: []
  description: HTTP Session data storage
  effort: 3
  labels:
  - konveyor.io/source=java
  - konveyor.io/source=java-ee
  - konveyor.io/target=cloud-readiness
  - clustering
  links:
  - title: 'Twelve-Factor App: Processes'
    url: https://12factor.net/processes
  - title: 'Twelve-Factor App: Backing services'
    url: https://12factor.net/backing-services
  - title: 'JBoss EAP:  Externalize HTTP Sessions to Red Hat Data Grid'
    url: https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.3/html-single/configuration_guide/index#jdg_externalize_http_sessions
  - title: Running Data Grid on OpenShift
    url: https://access.redhat.com/documentation/en-us/red_hat_data_grid/8.0/html-single/running_data_grid_on_openshift/index
  message: |-
    In a cloud environment, a restart can wipe out HTTP session data in the memory of a running container.

     Recommendation: Store HTTP session data in a cache backing service or a remote data grid.

     A remote data grid has the following benefits:

     * The application is more scaleable and elastic.
     * The application can survive EAP node failures because a JVM failure does not cause session data loss.
     * Session data can be shared by multiple applications.
  ruleID: session-00001
  when:
    or:
    - java.referenced:
        location: METHOD_CALL
        pattern: javax.servlet.http.HttpSession.setAttribute(*)
    - java.referenced:
        location: METHOD_CALL
        pattern: javax.servlet.http.HttpSession.putValue(*)
