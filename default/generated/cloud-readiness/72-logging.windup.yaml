- category: mandatory
  customVariables: []
  description: Logging to file system
  effort: 1
  labels:
  - konveyor.io/source=java
  - konveyor.io/source=java-ee
  - konveyor.io/target=cloud-readiness
  - logging
  links: []
  message: |-
    If the application writes logs to a file system, local log files may be lost if an instance terminates or restarts.

     Recommendations

     * Use a centralized log management system.
     * Log to standard output and allow the cloud platform to manage the logging.
     * Use shared storage for log files.
  ruleID: logging-0000
  tag:
  - Logging to file system
  when:
    or:
    - builtin.filecontent:
        filePattern: log4j\.(xml|properties)
        pattern: ((Daily)?Rolling)?FileAppender
    - java.referenced:
        location: IMPORT
        pattern: org.apache.*log4j.*FileAppender*
    - java.referenced:
        location: IMPORT
        pattern: java.util.logging.FileHandler*
    - java.referenced:
        location: IMPORT
        pattern: ch.qos.logback.core.FileAppender
    - java.referenced:
        location: IMPORT
        pattern: org.pmw.tinylog.writers.FileWriter
- category: mandatory
  customVariables: []
  description: Logging to Socket Handler
  effort: 3
  labels:
  - konveyor.io/source=java
  - konveyor.io/source=java-ee
  - konveyor.io/target=cloud-readiness
  - logging
  links: []
  message: |-
    If an application writes logs with `SocketHandler`, an alternative method is required. Socket communication is not suitable for a cloud environment because it requires fixed communication with a target host.

     Recommendations

     * Use a centralized log management system.
     * Log to standard output and allow the cloud platform to manage the logging.
     * Use shared storage for log files.
  ruleID: logging-0001
  tag:
  - Logging to Socket Handler
  when:
    java.referenced:
      location: IMPORT
      pattern: java.util.logging.SocketHandler*
