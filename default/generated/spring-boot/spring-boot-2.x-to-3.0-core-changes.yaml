- ruleID: spring-boot-2.x-to-3.0-core-changes-00001
  category: mandatory
  effort: 1
  labels:
    - konveyor.io/source=spring-boot2
    - konveyor.io/target=spring-boot3+
  when:
    or:
    - builtin.file:
        pattern: "banner.gif"
    - builtin.file:
        pattern: "banner.jpg"
    - builtin.file:
        pattern: "banner.png"
  description: Image banner support removed
  message: |
    Support for image-based application banners has been removed. `banner.gif`, `banner.jpg`,
    and `banner.png` files are now ignored and should be replaced with a text-based `banner.txt` file.

  links:
    - title: 'Spring Boot 3.0 Migration Guide - Core changes'
      url: https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-3.0-Migration-Guide#image-banner-support-removed


- ruleID: spring-boot-2.x-to-3.0-core-changes-00010
  category: mandatory
  effort: 1
  labels:
    - konveyor.io/source=spring-boot2
    - konveyor.io/target=spring-boot3+
  when:
    java.referenced:
      pattern: '*'
      location: CLASS
      annotated:
        pattern: org.springframework.boot.context.properties.ConstructorBinding
  description: "@ConstructorBinding no longer needed at type level"
  message: |
    `@ConstructorBinding` is no longer needed at the type level on `@ConfigurationProperties` classes and should be removed.
    When a class or record has multiple constructors, it may still be used on a constructor to indicate which one should be used for property binding.
    
    If you were relying on autowiring of a dependency into the constructor of a `@ConfigurationProperties` class,
    you must now annotate it with @Autowired to prevent it being identified as a target for property binding.

  links:
    - title: 'Spring Boot 3.0 Migration Guide - Core changes'
      url: https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-3.0-Migration-Guide#constructingbinding-no-longer-needed-at-the-type-level


- ruleID: spring-boot-2.x-to-3.0-core-changes-00020
  category: mandatory
  effort: 3
  labels:
    - konveyor.io/source=spring-boot2
    - konveyor.io/target=spring-boot3+
  when:
    java.referenced:
      pattern: org.springframework.boot.json.YamlJsonParser
  description: YamlJsonParser has been removed in Spring Boot 3.0
  message: |
    The class `YamlJsonParser` has been removed in Spring Boot 3.0 because SnakeYAML's JSON parsing was inconsistent with other parsers.

    If you were using `YamlJsonParser`, switch to one of the other implementations of Spring Boot's `JsonParser` interface:
    - **`JacksonJsonParser`**: Uses Jackson to parse JSON.
    - **`BasicJsonParser`**: Provides a simple, lightweight JSON parser (less commonly used).

    For example:
    - Using `JacksonJsonParser`:
      ```
      JsonParser parser = new JacksonJsonParser();
      Map<String, Object> jsonMap = parser.parseMap(jsonInputString);
      ```
    - Using `BasicJsonParser`:
      ```
      JsonParser parser = new BasicJsonParser();
      Map<String, Object> jsonMap = parser.parseMap(jsonInputString);
      ```

    Ensure to update all usages of `YamlJsonParser` to a supported `JsonParser` implementation.

  links:
    - title: 'Spring Boot 3.0 migration guide'
      url: https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-3.0-Migration-Guide#yamljsonparser
    - title: 'JacksonJsonParser Documentation'
      url: https://docs.spring.io/spring-boot/docs/current/api/org/springframework/boot/json/JacksonJsonParser.html
    - title: 'BasicJsonParser Documentation'
      url: https://docs.spring.io/spri


- ruleID: spring-boot-2.x-to-3.0-core-changes-00030
  category: mandatory
  effort: 1
  labels:
    - konveyor.io/source=spring-boot2
    - konveyor.io/target=spring-boot3+
  when:
    builtin.file:
      pattern: "spring.factories"
  description: "Autoconfiguration mechanism has changed"
  message: |
    In Spring Boot 3.0, the `spring.factories` file can no longer be used to register
    auto-configuration classes under the `EnableAutoConfiguration` key. Instead, these classes
    must be listed in the new `AutoConfiguration.imports` file.

    Please migrate the entries as follows:

    1. Identify all auto-configuration classes listed under the `EnableAutoConfiguration` key in `spring.factories`.
    2. Create a new file: `META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports`.
    3. Copy the auto-configuration class entries into the `AutoConfiguration.imports` file.
    4. Remove or comment out the `EnableAutoConfiguration` key and its entries from `spring.factories`.

    If your library must support both Spring Boot 2.x and 3.x, you can list the classes in both files.
    Spring Boot 2.7 will handle this gracefully by deduplicating entries.
  links:
    - title: "Spring Boot 3.0 Migration Guide - Autoconfiguration files"
      url: "https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-3.0-Migration-Guide#auto-configuration-files"


