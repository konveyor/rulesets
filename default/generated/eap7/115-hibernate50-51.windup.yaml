- category: optional
  customVariables: []
  description: Hibernate 5.1  - @Embeddable changes interpretation
  effort: 1
  labels:
  - konveyor.io/source=hibernate5.0-
  - konveyor.io/source=hibernate
  - konveyor.io/source=eap7.0-
  - konveyor.io/source=eap
  - konveyor.io/target=hibernate5.1+
  - konveyor.io/target=hibernate
  - konveyor.io/target=eap7
  - konveyor.io/target=eap
  - hibernate
  - Hibernate
  links:
  - title: Hibernate ORM 5.1 Features
    url: https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.1/html-single/migration_guide/application_migration_changes#hibernate_5_1_features
  message: |-
    Previous releases of Hibernate interpreted all null column values for an `@Embeddable` to mean the `@Embeddable` itself should be null.

     In this release, applications can dictate that Hibernate should instead use an empty `@Embeddable` instance by specifying the `hibernate.create_empty_composites.enabled` opt-in setting.
  ruleID: hibernate50-51-00000
  when:
    java.referenced:
      location: ANNOTATION
      pattern: javax.persistence.Embeddable
- category: mandatory
  customVariables: []
  description: Hibernate 5.1  - Changes to schema management tooling
  effort: 1
  labels:
  - konveyor.io/source=hibernate5.0-
  - konveyor.io/source=hibernate
  - konveyor.io/source=eap7.0-
  - konveyor.io/source=eap
  - konveyor.io/target=hibernate5.1+
  - konveyor.io/target=hibernate
  - konveyor.io/target=eap7
  - konveyor.io/target=eap
  - hibernate
  - Hibernate
  links:
  - title: Schema Management Tooling Changes
    url: https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.1/html-single/migration_guide/application_migration_changes#schema_management_tooling_changes
  message: |-
    The changes mainly focused on:

     * Unifying handling of hbm2ddl.auto and Hibernateâ€™s JPA schema-generation support.
     * Removing JDBC concerns from the SPI to facilitate true replacement (for OGM)

     These changes are a migration concern since the application is directly using some of the changed classes.
  ruleID: hibernate50-51-00100
  when:
    or:
    - java.referenced:
        location: IMPORT
        pattern: org.hibernate.tool.hbm2ddl.(SchemaExport|SchemaUpdate|SchemaValidator)
    - java.referenced:
        location: IMPORT
        pattern: org.hibernate.tool.schema.spi.SchemaManagementTool
    - java.referenced:
        location: IMPORT
        pattern: org.hibernate.tool.schema.internal.HibernateSchemaManagementTool
