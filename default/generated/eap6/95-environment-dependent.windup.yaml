- category: optional
  customVariables: []
  description: Dynamic class instantiation
  effort: 0
  labels:
  - konveyor.io/target=eap6
  - konveyor.io/target=eap7
  - konveyor.io/target=eap
  - konveyor.io/target=java-ee6+
  - konveyor.io/target=java-ee
  - konveyor.io/source
  - classloader
  links:
  - title: Class Loading and Modules in JBoss EAP 7
    url: https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.0/html-single/development_guide/#class_loading_and_modules
  - title: Class Loading and Modules in JBoss EAP 6
    url: https://access.redhat.com/documentation/en-us/JBoss_Enterprise_Application_Platform/6.4/html-single/Development_Guide/index.html#chap-Class_Loading_and_Modules
  - title: Article about Classloading in JBoss EAP 6
    url: https://access.redhat.com/solutions/361343
  message: |-
    The class is dynamically loaded within application. During the migration, multiple classes that are provided on classpath by a different server may not be present anymore.

     Please review the class-loading mechanisms and ensure that the dynamically loaded class is available in JBoss EAP.
  ruleID: environment-dependent-calls-01000
  when:
    java.referenced:
      location: METHOD_CALL
      pattern: java.lang.Class.forName(*)
- category: mandatory
  customVariables: []
  description: Call of JNDI lookup
  effort: 1
  labels:
  - konveyor.io/target=eap6
  - konveyor.io/target=eap7
  - konveyor.io/target=eap
  - konveyor.io/target=java-ee6+
  - konveyor.io/target=java-ee
  - konveyor.io/source
  - jndi
  links: []
  message: |-
    This method lookups an object using a JNDI String. During the migration process, some entity JNDI bindings may change.
     Ensure that the JNDI Name does not need to change for JBoss EAP.

     *For Example:*

     ```java
     (ConnectionFactory)initialContext.lookup("weblogic.jms.ConnectionFactory");
     ```

     *should become:*

     ```java
     (ConnectionFactory)initialContext.lookup("/ConnectionFactory");
     ```
  ruleID: environment-dependent-calls-02000
  when:
    as: default
    java.referenced:
      location: METHOD_CALL
      pattern: javax.naming.Context.lookup(*)
- category: mandatory
  customVariables: []
  description: Proprietary InitialContext initialization
  effort: 1
  labels:
  - konveyor.io/target=eap6
  - konveyor.io/target=eap7
  - konveyor.io/target=eap
  - konveyor.io/target=java-ee6+
  - konveyor.io/target=java-ee
  - konveyor.io/source
  - jndi
  links: []
  message: |-
    In JBoss EAP, the `InitialContext` should be instantiated with no arguments. Once an instance is constructed, look up the service using portable JNDI lookup syntax. Ensure also that in case system properties for `InitialContext` are provided, they do not need to be changed for the JBoss EAP.

     ```java
     InitialContext context = new InitialContext();
     Service service = (Service) context.lookup( "java:app/service/" + ServiceImpl.class.getSimpleName() );
     ```
  ruleID: environment-dependent-calls-03000
  when:
    as: default
    java.referenced:
      location: CONSTRUCTOR_CALL
      pattern: javax.naming.InitialContext(java.util.Hashtable*
- customVariables: []
  description: JNDI properties file
  labels:
  - konveyor.io/target=eap6
  - konveyor.io/target=eap7
  - konveyor.io/target=eap
  - konveyor.io/target=java-ee6+
  - konveyor.io/target=java-ee
  - konveyor.io/source
  links: []
  message: "\n                          \n                          The JNDI automatically
    reads the application resource files from all components in the applications'
    classpaths.\n                          The JNDI then makes the properties from
    these files available to the service providers.\n\n                          Please
    ensure the property values listed in this file are available to JBoss EAP.\n                          \n
    \                       "
  ruleID: environment-dependent-calls-03500
  tag:
  - webservice
  - JNDI properties file
  when:
    as: default
    builtin.file:
      pattern: jndi\.properties
- category: mandatory
  customVariables:
  - name: suffix
    nameOfCaptureGroup: suffix
    pattern: javax.management.(?P<suffix>(ObjectName))?.*
  description: JMX MBean object names may change after migration
  effort: 1
  labels:
  - konveyor.io/target=eap6
  - konveyor.io/target=eap7
  - konveyor.io/target=eap
  - konveyor.io/target=java-ee6+
  - konveyor.io/target=java-ee
  - konveyor.io/source
  - jmx
  links: []
  message: |-
    After migration, some of the JMX beans provided by the previous server may not be present anymore.
     Ensure that the `javax.management.{{suffix}}` does not need to change for JBoss EAP.
  ruleID: environment-dependent-calls-04000
  when:
    as: default
    java.referenced:
      location: CONSTRUCTOR_CALL
      pattern: javax.management.(ObjectName)*
- category: mandatory
  customVariables:
  - name: suffix
    nameOfCaptureGroup: suffix
    pattern: javax.management.(?P<suffix>(remote.JMXServiceURL))?.*
  description: JMX API connector server address under 'javax.management' may not be present after migration
  effort: 1
  labels:
  - konveyor.io/target=eap6
  - konveyor.io/target=eap7
  - konveyor.io/target=eap
  - konveyor.io/target=java-ee6+
  - konveyor.io/target=java-ee
  - konveyor.io/source
  - jmx
  links: []
  message: |-
    After migration, some of the JMX beans provided by the previous server may not be present anymore.
     Ensure that the `javax.management.{{suffix}}` does not need to change for JBoss EAP.
  ruleID: environment-dependent-calls-04001
  when:
    as: default
    java.referenced:
      location: CONSTRUCTOR_CALL
      pattern: javax.management.(remote.JMXServiceURL)*
- category: mandatory
  customVariables: []
  description: JMX connection factory parameters
  effort: 1
  labels:
  - konveyor.io/target=eap6
  - konveyor.io/target=eap7
  - konveyor.io/target=eap
  - konveyor.io/target=java-ee6+
  - konveyor.io/target=java-ee
  - konveyor.io/source
  - jmx
  links: []
  message: |-
    After migration, JMX connection String or parameters may be different than the one provided by previous server.
     As an example, `javax.management.remote.JMXConnectorFactory.PROTOCOL_PROVIDER_PACKAGES` will change.
     Ensure that any of the parameters does not need to change for JBoss EAP.
  ruleID: environment-dependent-calls-05000
  when:
    as: default
    java.referenced:
      location: METHOD_CALL
      pattern: javax.management.remote.JMXConnectorFactory.connect(*)
